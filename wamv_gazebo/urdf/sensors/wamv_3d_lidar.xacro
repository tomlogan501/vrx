<?xml version="1.0" encoding="UTF-8"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- Macro to insert a 3D scanning LIDAR with ROS integration
    update_rate: frequency to publish output, hz
    vertical_lasers: number of vertical lasers which spin about Z to generate output
    samples: number of samples during spin, higher is more dense but slows down simulation
    resolution: proportion of samples to actually simulate, rest are interprolated. Ex: 0.1 means 9/10 samples are interprolated
    min_angle: the horizontal angle that the scan begins at
    max_angle: the angle that the scan ends at
    min_vertical_angle: the angle of the lowest vertical beam
    max_vertical_angle: the angle of the highest vertical beam
    max_range: maximum distance for an object to be detected by laser
    noise_stddev: Standard deviation of gaussian noise applied to output pointcloud
  -->
  <xacro:macro name="wamv_3d_lidar" params="name x:=0.7 y:=0 z:=1.545 R:=0 P:=0 Y:=${-pi/2} height:=0.25
                                            update_rate:=10 vertical_lasers:=16 samples:=1800 resolution:=0.1
                                            min_angle:=${-pi} max_angle:=${pi}
                                            min_vertical_angle:=${-pi/12} max_vertical_angle:=${pi/12}
                                            max_range:=100 noise_stddev:=0.01">
    <!-- 3d lidar sensor -->
    <link name="${name}_link">
      <visual name="${name}_visual">
        <origin xyz="0 0 -0.035" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae"/>
        </geometry>
      </visual>
      <collision name="${name}_collision">
        <geometry>
          <cylinder radius="0.055" length="0.075"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="1"/>
        <inertia
          ixx="0.00109375"
          iyy="0.00109375"
          izz="0.00125"
          ixy="0"
          ixz="0"
          iyz="0"/>
      </inertial>
    </link>

    <!-- Sensor post -->
    <link name="${name}_post_link">
      <visual name="${name}_post_visual">
        <origin xyz="0 0 -0.2515" rpy="${pi/2} 0 0"/>
        <geometry>
          <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post.dae"/>
        </geometry>
      </visual>
      <collision name="${name}_post_collision">
        <geometry>
          <cylinder radius="0.0076" length="0.503"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.5"/>
        <inertia
          ixx="0.010549261666667"
          iyy="0.010549261666667"
          izz="0.000014440000000"
          ixy="0"
          ixz="0"
          iyz="0"/>
      </inertial>
    </link>
    
    <!-- Sensor post arm -->
    <link name="${name}_post_arm_link">
      <visual name="${name}_post_arm_visual">
        <origin xyz="0 -0.016 -0.035" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
        </geometry>
      </visual>
      <collision name="${name}_post_arm_collision">
        <origin xyz="0 0 0" rpy="${-pi/20} 0 0"/>
        <geometry>
          <cylinder radius="0.008" length="0.065"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="${-pi/20} 0 0"/>
        <mass value="0.1"/>
        <inertia
          ixx="0.00003680833"
          iyy="0.00003680833"
          izz="0.00000320000"
          ixy="0"
          ixz="0"
          iyz="0"/>
      </inertial>
    </link>

    <!-- Base to sensor post joint -->
    <joint name="base_to_${name}_post_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${R} ${P} ${Y}" />
      <parent link="base_link" />
      <child link="${name}_post_link" />
    </joint>

    <!-- Sensor post to sensor post arm joint -->
    <joint name="${name}_post_to_${name}_post_arm_joint" type="fixed">
      <origin xyz="0 0.03 ${height}" rpy="${-pi/3} 0 0" />
      <parent link="${name}_post_link" />
      <child link="${name}_post_arm_link" />
    </joint>

    <!-- Sensor post arm to lidar joint -->
    <joint name="${name}_post_arm_to_${name}_lidar_joint" type="fixed">
      <!-- rpy="${pi/3} 0 0" for flat lidar -->
      <origin xyz="0 -0.025 0.055" rpy="${pi/3-radians(15)} 0 0" />
      <parent link="${name}_post_arm_link" />
      <child link="${name}_link" />
    </joint>
    
    <gazebo reference="${name}_link">
      <sensor type="gpu_ray" name="${name}_sensor">
        <update_rate>${update_rate}</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>${samples/resolution}</samples>
              <resolution>${resolution}</resolution>
              <min_angle>${min_angle}</min_angle>
              <max_angle>${max_angle}</max_angle>
            </horizontal>
            <vertical>
              <samples>${vertical_lasers}</samples>
              <resolution>1</resolution>
              <min_angle>${min_vertical_angle}</min_angle>
              <max_angle>${max_vertical_angle}</max_angle>
            </vertical>
          </scan>
          <range>
            <min>0.1</min>
            <max>${max_range}</max>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>${noise_stddev}</stddev>
          </noise>
        </ray>
        <plugin name="${name}_plugin" filename="libgazebo_ros_velodyne_gpu_laser.so">
          <topicName>${name}/points</topicName>
          <frameName>${name}_link</frameName>
          <min_intensity>0</min_intensity>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>
</robot>
