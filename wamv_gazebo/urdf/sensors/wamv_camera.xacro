<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:macro name="wamv_camera" params="name x:=0.5 y:=0 z:=1.5 R:=0 P:=0 Y:=0 post_Y:=0">
    <!-- Define length variables for link positioning -->
    <xacro:property name="platform_z" value="1.2965"/>
    <xacro:property name="post_to_post_arm_x" value="0.03"/>
    <xacro:property name="post_arm_to_camera_x" value="0.02"/>
    <xacro:property name="post_arm_to_camera_z" value="0.027"/>

    <!-- Define post length based on desired z position of sensor -->
    <xacro:property name="post_length" value="${z-platform_z-post_arm_to_camera_z}"/>
    <xacro:property name="mesh_post_length" value="0.503"/>

    <!-- Monocular Camera -->
    <link name="${name}_link">
      <visual name="${name}_visual">
        <origin xyz="-0.033 0 0" rpy="0 0 ${pi/2}"/>
        <geometry>
          <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae"/>
        </geometry>
      </visual>
      <collision name="${name}_lens_collision">
        <origin xyz="0.018 0 0" rpy="0 ${pi/2} 0"/>
        <geometry>
          <cylinder radius="0.015" length="0.042"/>
        </geometry>
      </collision>
      <collision name="${name}_box_collision">
        <origin xyz="-0.0205 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.036 0.03 0.03"/>
        </geometry>
      </collision>
      <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
      <inertial>
        <mass value="0.3"/>
        <inertia
          ixx="0.0000450"
          iyy="0.0001746"
          izz="0.0001746"
          ixy="0"
          ixz="0"
          iyz="0"/>
      </inertial>
    </link>

    <!-- Sensor post -->
    <link name="${name}_post_link">
      <visual name="${name}_post_visual">
        <geometry>
          <cylinder radius="0.0076" length="${post_length}"/>
        </geometry>
        <material name="${name}_post_material">
          <color rgba="1.0 0.0 0.0 1.0"/>
        </material>
      </visual>
      <collision name="${name}_post_collision">
        <geometry>
          <cylinder radius="0.0076" length="${post_length}"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.5"/>
        <inertia
          ixx="0.010549261666667"
          iyy="0.010549261666667"
          izz="0.000014440000000"
          ixy="0"
          ixz="0"
          iyz="0"/>
      </inertial>
    </link>
    
    <!-- Sensor post arm -->
    <link name="${name}_post_arm_link">
      <visual name="${name}_post_arm_visual">
        <origin xyz="-0.038 0 -0.003" rpy="${radians(-60)} 0 ${-pi/2}"/>
        <geometry>
          <mesh filename="package://vrx_gazebo/models/sensor_post/mesh/sensor_post_arm.dae"/>
        </geometry>
      </visual>
      <collision name="${name}_post_arm_collision">
        <origin xyz="0 0 0" rpy="${radians(-60)-pi/20} 0 ${-pi/2}"/>
        <geometry>
          <cylinder radius="0.008" length="0.065"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="${radians(-60)-pi/20} 0 ${-pi/2}"/>
        <mass value="0.1"/>
        <inertia
          ixx="0.00003680833"
          iyy="0.00003680833"
          izz="0.00000320000"
          ixy="0"
          ixz="0"
          iyz="0"/>
      </inertial>
    </link>
    
    <!-- Base to sensor post joint -->
    <xacro:property name="post_z" value="${platform_z+post_length/2}"/>
    <joint name="base_to_${name}_post_joint" type="fixed">
      <origin xyz="${x-(post_to_post_arm_x+post_arm_to_camera_x)*cos(post_Y)} ${y-(post_to_post_arm_x+post_arm_to_camera_x)*sin(post_Y)} ${post_z}" rpy="0 0 ${post_Y}" />
      <parent link="base_link" />
      <child link="${name}_post_link" />
    </joint>

    <!-- Sensor post to sensor post arm joint -->
    <joint name="${name}_post_to_${name}_post_arm_joint" type="fixed">
      <origin xyz="${post_to_post_arm_x} 0 ${z-post_z-post_arm_to_camera_z}" rpy="0 0 0" />
      <parent link="${name}_post_link" />
      <child link="${name}_post_arm_link" />
    </joint>

    <!-- Sensor post arm to camera joint -->
    <joint name="${name}_post_arm_to_${name}_joint" type="fixed">
      <origin xyz="${post_arm_to_camera_x} 0 ${post_arm_to_camera_z}" rpy="${R} ${P} ${Y-post_Y}" />
      <parent link="${name}_post_arm_link" />
      <child link="${name}_link" />
    </joint>

    <gazebo reference="${name}_link">
      <sensor type="camera" name="${name}_sensor">
        <update_rate>30.0</update_rate>
        <camera name="${name}_camera">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_plugin_${name}" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>${name}</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${name}_link_optical</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>
</robot>
